// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/balance": {
            "post": {
                "description": "Метод для увеличения баланса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "увеличение баланса",
                "parameters": [
                    {
                        "description": "userId - id пользователя (UUID)\u003cbr\u003esum - сумма пополнения (больше 0)\u003cbr\u003e comment - комментарий (опционально)",
                        "name": "IncreaseBalanceRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IncreaseBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "В случае успешного добавления денег к балансу возвращается статус 200"
                    },
                    "400": {
                        "description": "В случае если запрос не валидный возвращается статус 400 и тело ответа",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/balance/{userId}": {
            "get": {
                "description": "Метод для получения баланса по userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "получение баланса по userId",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "b2b9a788-55fb-11ed-bdc3-0242ac120002",
                        "description": "id пользователя",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "В случае если баланс найден",
                        "schema": {
                            "$ref": "#/definitions/GetBalanceResponse"
                        }
                    },
                    "400": {
                        "description": "В случае если невалидный userId",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "В случае если баланс не найден по userId",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/report": {
            "post": {
                "description": "Метод создание отчета для бухгалтерии. Возвращает ссылку на файл",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "report"
                ],
                "summary": "Создание отчета для бухгалтерии",
                "parameters": [
                    {
                        "description": "year - год отчета (2022 \u003c=year \u003c= 2100)\u003cbr\u003emonth - месяц отчета",
                        "name": "CreateReportRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateReportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CreateReportResponse"
                        }
                    }
                }
            }
        },
        "/report/{fileName}": {
            "get": {
                "description": "Метод получения файла по ссылке",
                "tags": [
                    "report"
                ],
                "summary": "Получения файла по ссылке",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Если файл не найден"
                    }
                }
            }
        },
        "/transaction": {
            "get": {
                "description": "Метод получение списка транзакций пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Получение списка транзакций пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "b2b9a788-55fb-11ed-bdc3-0242ac120002",
                        "description": "id пользователя",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "example": 1,
                        "description": "номер страницы",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "example": 1,
                        "description": "количество записей на странице",
                        "name": "itemsPerPage",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "date",
                            "sum"
                        ],
                        "type": "string",
                        "default": "date",
                        "example": "sum",
                        "description": "поле по которому надо сортировать",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "example": "asc",
                        "description": "тип сортировки",
                        "name": "sortType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GetTransactionsResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Метод для обработки транзакции. Для резервации денег со счета в теле запроса поле \"transactionType\" = 1. Для признания выручки и подтверждения списания средств с баланса \"transactionType\" = 2. В случае отмены резервации и возврата средств на основной баланс \"transactionType\" = 3.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Метод для обработки транзакции",
                "parameters": [
                    {
                        "description": "orderId - id заказа (UUID).\u003cbr\u003e serviceId - id услуги (UUID).\u003cbr\u003e userId - id пользователя (UUID).\u003cbr\u003e sum - сумма транзакции (больше 0).\u003cbr\u003e transactionType - тип транзакции (enum(1, 2, 3)).\u003cbr\u003e comment - комментарий (опционально)",
                        "name": "SaveTransactionRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SaveTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Воможные статусы:\u003cbr\u003e 1 - добавление/обновление произошло успешно.\u003cbr\u003e 2 - попытка резервации (\"transactionType\" = 1), резервация с соответсвующими orderId, userId, serviceId уже существует, транзакция резервации не добавлена.\u003cbr\u003e 3 - попытка резервации (\"transactionType\" = 1), на балансе недостаточно средств, транзакция резервации не добавлена.\u003cbr\u003e 4 - попытка признания выручки (\"transactionType\" = 2), транзакция с соответсвующими orderId, userId, serviceId не найдена, ошибка.\u003cbr\u003e 5 - попытка признания выручки (\"transactionType\" = 2), транзакция с соответсвующими orderId, userId, serviceId найдена и выручка уже списана ранее, ошибка.\u003cbr\u003e 6 - попытка признания выручки (\"transactionType\" = 2), транзакция с соответсвующими orderId, userId, serviceId найдена и уже была отклонена ранее, ошибка.\u003cbr\u003e 7 - попытка отмены резервации (\"transactionType\" = 3), транзакция с соответсвующими orderId, userId, serviceId не найдена, ошибка.\u003cbr\u003e 8 - попытка отмены резервации (\"transactionType\" = 3), транзакция с соответсвующими orderId, userId, serviceId найдена и уже была отменена ранее, деньги были возвращены, ошибка.\u003cbr\u003e 9 - попытка отмены резервации (\"transactionType\" = 3), транзакция с соответсвующими orderId, userId, serviceId найдена и уже была подтверждена ранее, деньги были списаны, ошибка.\u003cbr\u003e 10 - баланс пользователя не найден, ошибка",
                        "schema": {
                            "$ref": "#/definitions/SaveTransactionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "CreateReportRequest": {
            "type": "object",
            "required": [
                "month",
                "year"
            ],
            "properties": {
                "month": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12
                    ]
                },
                "year": {
                    "type": "integer",
                    "maximum": 2100,
                    "minimum": 2022
                }
            }
        },
        "CreateReportResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "http://localhost:8000/report/03070038-3459-45d8-ad22-a8fc0fbb634c.csv"
                }
            }
        },
        "GetBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "format": "numeric",
                    "example": 53.68
                }
            }
        },
        "GetTransactionsResponse": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transaction"
                    }
                }
            }
        },
        "IncreaseBalanceRequest": {
            "type": "object",
            "required": [
                "sum",
                "userId"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "format": "string",
                    "example": "Зачисление денежных средств на баланс"
                },
                "sum": {
                    "type": "number",
                    "format": "numeric",
                    "example": 53.68
                },
                "userId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "c806ce22-7ea3-4402-b979-9959746bb956"
                }
            }
        },
        "SaveTransactionRequest": {
            "type": "object",
            "required": [
                "orderId",
                "serviceId",
                "sum",
                "transactionType",
                "userId"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "format": "string",
                    "example": "Резервация денежных средств"
                },
                "orderId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "6c87959d-aa88-4f51-932b-ff70563ad87a"
                },
                "serviceId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "15aa9f91-c8f7-40e4-9108-d45891c10444"
                },
                "sum": {
                    "type": "number",
                    "format": "numeric",
                    "example": 345
                },
                "transactionType": {
                    "type": "integer",
                    "format": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "example": 1
                },
                "userId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "e8c49cf0-d984-4ed8-a37c-2d60f74c7fe5"
                }
            }
        },
        "SaveTransactionResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "оплата подтверждена"
                },
                "date": {
                    "type": "string",
                    "example": "2022-11-01T16:37:52.717392Z"
                },
                "order_id": {
                    "type": "string",
                    "example": "6c87959d-aa88-4f51-932b-ff70563ad87b"
                },
                "service_id": {
                    "type": "string",
                    "example": "15aa9f91-c8f7-40e4-9108-d45891c10444"
                },
                "sum": {
                    "type": "number",
                    "example": 1000
                },
                "transaction_type": {
                    "type": "string",
                    "example": "Резервация подтверждена, средства списаны, оплата прошла"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8000",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Balance Service",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
